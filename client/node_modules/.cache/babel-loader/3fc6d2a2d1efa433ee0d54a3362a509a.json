{"ast":null,"code":"import * as api from \"../api\";\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: \"FETCH_ALL\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: \"CREATE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: \"UPDATE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id, post) => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: \"DELETE\",\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const LikePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.LikePost(id);\n    dispatch({\n      type: \"LIKE\",\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/aksha/OneDrive/Desktop/Github/Full-Stack-ToDo-List/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost","LikePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMQ,UAAU,GAAG,CAACD,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEQ;AAA3B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMS,QAAQ,GAAG,CAACF,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AACxD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACgB,QAAJ,CAAaF,EAAb,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM","sourcesContent":["import * as api from \"../api\";\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: \"FETCH_ALL\", payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: \"CREATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: \"UPDATE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: \"DELETE\", payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const LikePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.LikePost(id);\r\n    dispatch({ type: \"LIKE\", payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}